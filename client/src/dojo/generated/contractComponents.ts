/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Config: (() => {
      return defineComponent(
        world,
        { token_address: RecsType.BigInt, minter_address: RecsType.BigInt, renderer_address: RecsType.BigInt, max_supply: RecsType.BigInt, available_supply: RecsType.BigInt, cool_down: RecsType.Boolean },
        {
          metadata: {
            namespace: "karat",
            name: "Config",
            types: ["contractaddress","contractaddress","contractaddress","u128","u128","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    Seed: (() => {
      return defineComponent(
        world,
        { token_id: RecsType.BigInt, seed: RecsType.BigInt },
        {
          metadata: {
            namespace: "karat",
            name: "Seed",
            types: ["u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721BalanceModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, account: RecsType.BigInt, amount: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721BalanceModel",
            types: ["contractaddress","contractaddress","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721EnumerableIndexModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, index: RecsType.BigInt, token_id: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721EnumerableIndexModel",
            types: ["contractaddress","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721EnumerableOwnerIndexModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, owner: RecsType.BigInt, index: RecsType.BigInt, token_id: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721EnumerableOwnerIndexModel",
            types: ["contractaddress","contractaddress","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721EnumerableOwnerTokenModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, owner: RecsType.BigInt, token_id: RecsType.BigInt, index: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721EnumerableOwnerTokenModel",
            types: ["contractaddress","contractaddress","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721EnumerableTokenModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, token_id: RecsType.BigInt, index: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721EnumerableTokenModel",
            types: ["contractaddress","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721EnumerableTotalModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, total_supply: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721EnumerableTotalModel",
            types: ["contractaddress","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721MetaModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, name: RecsType.String, symbol: RecsType.String, base_uri: RecsType.String },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721MetaModel",
            types: ["contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721OperatorApprovalModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, owner: RecsType.BigInt, operator: RecsType.BigInt, approved: RecsType.Boolean },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721OperatorApprovalModel",
            types: ["contractaddress","contractaddress","contractaddress","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721OwnerModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, token_id: RecsType.BigInt, address: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721OwnerModel",
            types: ["contractaddress","u128","contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    ERC721TokenApprovalModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, token_id: RecsType.BigInt, address: RecsType.BigInt },
        {
          metadata: {
            namespace: "origami_karat",
            name: "ERC721TokenApprovalModel",
            types: ["contractaddress","u128","contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    InitializableModel: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, initialized: RecsType.Boolean },
        {
          metadata: {
            namespace: "origami_karat",
            name: "InitializableModel",
            types: ["contractaddress","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    SRC5Model: (() => {
      return defineComponent(
        world,
        { token: RecsType.BigInt, interface_id: RecsType.BigInt, supports: RecsType.Boolean },
        {
          metadata: {
            namespace: "origami_karat",
            name: "SRC5Model",
            types: ["contractaddress","felt252","bool"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
